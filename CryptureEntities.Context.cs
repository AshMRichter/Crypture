//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crypture
{
    using System;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.Core.EntityClient;
    using System.Data.Entity.Infrastructure;
    using System.Data.SQLite;

    public partial class CryptureEntities : DbContext
    {
        public static string ConnectionString { get; set; } = "";

        public static string DatabasePath
        {
            set
            {
                SQLiteConnectionStringBuilder oSQLite = new SQLiteConnectionStringBuilder();
                oSQLite.CacheSize = 2048;
                oSQLite.DataSource = value.Replace("\\","\\\\");
                oSQLite.ForeignKeys = true;
                oSQLite.Version = 3;
                EntityConnectionStringBuilder oBuilder = new EntityConnectionStringBuilder();
                oBuilder.Metadata = "res://*/CryptureEntities.csdl|res://*/CryptureEntities.ssdl|res://*/CryptureEntities.msl";
                oBuilder.Provider = "System.Data.SQLite.EF6";
                oBuilder.ProviderConnectionString = oSQLite.ConnectionString;
                ConnectionString = oBuilder.ConnectionString;
            }
        }
        
        public CryptureEntities()
            : base(ConnectionString)
        {

        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Instance> Instances { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Cipher> Ciphers { get; set; }
    }
}
